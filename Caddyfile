# ARUS (Marine Predictive Maintenance & Scheduling) - Caddy Configuration
# Handles reverse proxy, SSL termination, and load balancing

# Main domain configuration
{$DOMAIN:localhost} {
    # Reverse proxy to ARUS application
    reverse_proxy arus-app:5000 {
        # Health check configuration
        health_uri /api/health
        health_interval 30s
        health_timeout 10s
        
        # Load balancing (for future scaling)
        # lb_policy round_robin
        
        # Header forwarding
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
    }

    # Security headers
    header {
        # Security headers for web application
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # Remove server information
        -Server
        
        # CORS headers for API access
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization, X-Device-Id"
    }

    # Handle preflight OPTIONS requests
    @options {
        method OPTIONS
    }
    respond @options 204

    # Static file caching
    @static {
        path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
    }
    header @static {
        Cache-Control "public, max-age=31536000"
        Expires "1y"
    }

    # API endpoint specific handling
    handle /api/* {
        # Note: Rate limiting is handled at the application level
        # For Caddy rate limiting, consider using the rate-limit plugin
        # or implement at the application middleware level
        
        reverse_proxy arus-app:5000
    }

    # WebSocket support for real-time features
    handle /ws/* {
        reverse_proxy arus-app:5000
    }

    # Gzip compression
    encode gzip

    # Logging
    log {
        output file /var/log/caddy/arus.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        level INFO
        format json
    }

    # File server for static assets (fallback)
    file_server

    # Error handling
    handle_errors {
        @5xx expression {http.error.status_code} >= 500
        rewrite @5xx /50x.html
        file_server
    }
}

# Monitoring endpoints (optional)
{$DOMAIN:localhost}:9090 {
    reverse_proxy prometheus:9090
    
    # Basic auth for monitoring (uncomment and configure if needed)
    # basicauth {
    #     admin $2a$14$...  # bcrypt hash of password
    # }
}

{$DOMAIN:localhost}:3000 {
    reverse_proxy grafana:3000
}

# Health check endpoint for load balancers
{$DOMAIN:localhost}/health {
    respond "OK" 200
}